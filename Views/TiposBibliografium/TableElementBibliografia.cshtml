@model Tuple<PaginatedList<Biblioteca.Models.TiposBibliografium>, List<ColumnConfig<Biblioteca.Models.TiposBibliografium>>>

@{
    var paginatedList = Model.Item1;
    var columns = Model.Item2;
}

<div class="p-2 bg-white rounded">
    <table class="align-middle table table-custom table-striped table-bordered">
        <thead>
            <tr>
                @foreach (var column in Model.Item2)
                {
                    <th>@column.Header</th>
                }
                <th></th> 
            </tr>
        </thead>
        <tbody>
            @foreach (var item in paginatedList)
            {
                <tr>
                    @foreach (var column in columns)
                    {
                        @* if (!string.IsNullOrEmpty(column.HtmlContent))
                        { *@
                            <td class="@column.CssClass">@Html.Raw(column.ValueSelector(item))</td>
                        @* } *@
                        @* else
                        {
                            <td class="@column.CssClass">@column.ValueSelector(item)</td>
                        } *@
                        @* <td class="@column.CssClass">@column.ValueSelector(item)</td> *@
                    }
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Identificador" class="btn border border-dark btn-light px-2">
                            <img class="iconos-sm" src="/images/icon_details.svg" alt="Icono details" />
                        </a>
                        <a asp-action="Edit" asp-route-id="@item.Identificador" class="btn border border-dark btn-light px-2">
                            <img class="iconos-sm" src="/images/icon_edit.svg" alt="Icono edit" />
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.Identificador" class="btn border border-dark btn-light px-2">
                            <img class="iconos-sm" src="/images/icon_delete.svg" alt="Icono delete" />
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !paginatedList.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !paginatedList.HasNextPage ? "disabled" : "";
    }

    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-start">
            <li class="page-item @prevDisabled">
                <a asp-action="Index" asp-route-pageNumber="@(paginatedList.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="page-link">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for (int i = 1; i <= paginatedList.TotalPages; i++)
            {
                <li class="page-item @(i == paginatedList.PageIndex ? "active" : "")">
                    <a asp-action="Index" asp-route-pageNumber="@i" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="page-link">
                        @i
                    </a>
                </li>
            }
            <li class="page-item @nextDisabled">
                <a asp-action="Index" asp-route-pageNumber="@(paginatedList.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="page-link">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>
